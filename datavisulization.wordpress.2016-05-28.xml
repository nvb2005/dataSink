<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2016-05-28 17:23"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Data Visulization</title>
<link>https://datavizweb.wordpress.com</link>
<description/>
<pubDate>Sat, 28 May 2016 17:23:18 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>https://datavizweb.wordpress.com</wp:base_blog_url>
<wp:author>
  <wp:author_login>sangraha</wp:author_login>
  <wp:author_email>rrbilgi@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[sangraha]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>65460562</wp:term_id>
  <wp:category_nicename>datascience</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[DataScience]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:term>
  <wp:term_id>1357</wp:term_id>
  <wp:term_taxonomy>nav_menu</wp:term_taxonomy>
  <wp:term_slug>primary</wp:term_slug>
  <wp:term_name><![CDATA[Primary]]></wp:term_name>
</wp:term>
<wp:term>
  <wp:term_id>1358</wp:term_id>
  <wp:term_taxonomy>nav_menu</wp:term_taxonomy>
  <wp:term_slug>social-media</wp:term_slug>
  <wp:term_name><![CDATA[Social Media]]></wp:term_name>
</wp:term>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://s2.wp.com/i/buttonw-com.png</url>
		<title>Data Visulization</title>
		<link>https://datavizweb.wordpress.com</link>
	</image>
	<item>
  <title>About</title>
  <link>https://datavizweb.wordpress.com/about/</link>
  <pubDate>Tue, 03 May 2016 16:23:27 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/about/</guid>
  <description/>
  <content:encoded><![CDATA[This is an example of an about page. Unlike posts, pages are better suited for more timeless content that you want to be easily accessible, like your About or Contact information. Click the Edit link to make changes to this page or <a href="https://wordpress.com/page">add another page</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[This is just a short excerpt for the about&nbsp;page.]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2016-05-03 16:23:27</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:27</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_headstart_post</wp:meta_key>
    <wp:meta_value><![CDATA[_hs_front_page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[15]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Contact</title>
  <link>https://datavizweb.wordpress.com/contact/</link>
  <pubDate>Tue, 03 May 2016 16:23:27 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/contact/</guid>
  <description/>
  <content:encoded><![CDATA[This is a contact page with some basic contact information and a contact form. [contact-form][contact-field label="Name" type="name" required="1"/][contact-field label="Email" type="email" required="1"/][contact-field label="Website" type="url"/][contact-field label="Comment" type="textarea" required="1"/][/contact-form]]]></content:encoded>
  <excerpt:encoded><![CDATA[This is just a short excerpt for the contact&nbsp;page.]]></excerpt:encoded>
  <wp:post_id>3</wp:post_id>
  <wp:post_date>2016-05-03 16:23:27</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:27</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>contact</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>2</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_headstart_post</wp:meta_key>
    <wp:meta_value><![CDATA[_hs_contact_page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[16]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_g_feedback_shortcode</wp:meta_key>
    <wp:meta_value><![CDATA[[contact-field label="Name" type="name" required="1"/][contact-field label="Email" type="email" required="1"/][contact-field label="Website" type="url"/][contact-field label="Comment" type="textarea" required="1"/]]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Bangalore Metro</title>
  <link>https://datavizweb.wordpress.com/2016/05/03/first-blog-post/</link>
  <pubDate>Tue, 03 May 2016 16:23:27 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/2016/05/03/first-blog-post/</guid>
  <description/>
  <content:encoded><![CDATA[<img class="alignnone size-full wp-image-19" src="https://datavizweb.files.wordpress.com/2016/05/bangaloremetro.jpeg" alt="BangaloreMetro" width="1200" height="1841" />]]></content:encoded>
  <excerpt:encoded><![CDATA[This is the excerpt for your very first post.]]></excerpt:encoded>
  <wp:post_id>4</wp:post_id>
  <wp:post_date>2016-05-03 16:23:27</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>first-blog-post</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[22437952525]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_headstart_post</wp:meta_key>
    <wp:meta_value><![CDATA[_hs_first_post]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[17]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Home</title>
  <link>https://datavizweb.wordpress.com/2016/05/03/home/</link>
  <pubDate>Tue, 03 May 2016 16:23:28 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/2016/05/03/home/</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>8</wp:post_id>
  <wp:post_date>2016-05-03 16:23:28</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:28</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>home</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[8]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[/]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://datavizweb.wordpress.com/2016/05/03/9/</link>
  <pubDate>Tue, 03 May 2016 16:23:28 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/2016/05/03/9/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>9</wp:post_id>
  <wp:post_date>2016-05-03 16:23:28</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:28</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>9</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>2</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[2]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://datavizweb.wordpress.com/2016/05/03/10/</link>
  <pubDate>Tue, 03 May 2016 16:23:28 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/2016/05/03/10/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>10</wp:post_id>
  <wp:post_date>2016-05-03 16:23:28</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:28</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>10</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>3</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[3]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Facebook</title>
  <link>https://datavizweb.wordpress.com/2016/05/03/facebook/</link>
  <pubDate>Tue, 03 May 2016 16:23:28 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/2016/05/03/facebook/</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>11</wp:post_id>
  <wp:post_date>2016-05-03 16:23:28</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:28</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>facebook</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="social-media"><![CDATA[Social Media]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[11]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.facebook.com]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>LinkedIn</title>
  <link>https://datavizweb.wordpress.com/2016/05/03/linkedin/</link>
  <pubDate>Tue, 03 May 2016 16:23:28 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/2016/05/03/linkedin/</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2016-05-03 16:23:28</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:28</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>linkedin</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="social-media"><![CDATA[Social Media]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[12]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Twitter</title>
  <link>https://datavizweb.wordpress.com/2016/05/03/twitter/</link>
  <pubDate>Tue, 03 May 2016 16:23:28 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/2016/05/03/twitter/</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2016-05-03 16:23:28</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:28</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>twitter</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>2</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="social-media"><![CDATA[Social Media]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[13]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.twitter.com]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Instagram</title>
  <link>https://datavizweb.wordpress.com/2016/05/03/instagram/</link>
  <pubDate>Tue, 03 May 2016 16:23:28 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/2016/05/03/instagram/</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>14</wp:post_id>
  <wp:post_date>2016-05-03 16:23:28</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:28</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>instagram</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>3</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="social-media"><![CDATA[Social Media]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[14]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.instagram.com]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Placeholder Image</title>
  <link>https://datavizweb.wordpress.com/about/placeholder-image/</link>
  <pubDate>Tue, 03 May 2016 16:23:29 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">http://datavizweb.files.wordpress.com/2016/05/stairs-lights-abstract-bubbles.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>15</wp:post_id>
  <wp:post_date>2016-05-03 16:23:29</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>placeholder-image</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://datavizweb.files.wordpress.com/2016/05/stairs-lights-abstract-bubbles.jpg</wp:attachment_url>
</item>
<item>
  <title>Placeholder Image</title>
  <link>https://datavizweb.wordpress.com/contact/placeholder-image-2/</link>
  <pubDate>Tue, 03 May 2016 16:23:31 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">http://datavizweb.files.wordpress.com/2016/05/person-smartphone-office-table.jpeg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>16</wp:post_id>
  <wp:post_date>2016-05-03 16:23:31</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>placeholder-image-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>3</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://datavizweb.files.wordpress.com/2016/05/person-smartphone-office-table.jpeg</wp:attachment_url>
</item>
<item>
  <title>Placeholder Image</title>
  <link>https://datavizweb.wordpress.com/2016/05/03/first-blog-post/placeholder-image-3/</link>
  <pubDate>Tue, 03 May 2016 16:23:32 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">http://datavizweb.files.wordpress.com/2016/05/pexels-photo-30732.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2016-05-03 16:23:32</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:23:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>placeholder-image-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>4</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://datavizweb.files.wordpress.com/2016/05/pexels-photo-30732.jpg</wp:attachment_url>
</item>
<item>
  <title>BangaloreMetro</title>
  <link>https://datavizweb.wordpress.com/2016/05/03/first-blog-post/bangaloremetro/</link>
  <pubDate>Tue, 03 May 2016 16:25:00 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">http://datavizweb.files.wordpress.com/2016/05/bangaloremetro.jpeg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>19</wp:post_id>
  <wp:post_date>2016-05-03 16:25:00</wp:post_date>
  <wp:post_date_gmt>2016-05-03 16:25:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>bangaloremetro</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>4</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://datavizweb.files.wordpress.com/2016/05/bangaloremetro.jpeg</wp:attachment_url>
</item>
<item>
  <title>Neural Network Visulazation</title>
  <link>https://datavizweb.wordpress.com/2016/05/03/neural-network-visulazation/</link>
  <pubDate>Tue, 03 May 2016 17:28:12 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?p=21</guid>
  <description/>
  <content:encoded><![CDATA[Tensorflow has nice visualization tool for neural network. It can be found here.

&nbsp;

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>21</wp:post_id>
  <wp:post_date>2016-05-03 17:28:12</wp:post_date>
  <wp:post_date_gmt>2016-05-03 17:28:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>neural-network-visulazation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[22439917765]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python xlsxwriter</title>
  <link>https://datavizweb.wordpress.com/2016/05/03/python-xlsxwriter/</link>
  <pubDate>Tue, 03 May 2016 17:28:02 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?p=31</guid>
  <description/>
  <content:encoded><![CDATA[Python module "xlsxwriter" can be used to create new Microsoft excel file. It is important to note that, xlsxwriter can only create new Microsoft excel file. It cannot be used to read existing excel file. Here we will see how this module can be used to create simple excel file.

[sourcecode language="python"]
import xlsxwriter as xls

## Create an empty xlsx file called book.xlsx
book = xls.workbook(&amp;amp;quot;book.xlsx&amp;amp;quot;)

## add a sheet to the workbook, default name for the sheet is sheet1
sheet1 = book.add_worksheet()

## add another sheet, but this time lets rename it to &amp;amp;quot;raw_data&amp;amp;quot;
sheet2 = book.add_worksheet(&amp;amp;quot;raw_data&amp;amp;quot;)
[/sourcecode]

Once the workbook and worksheet are created, we can start adding data.

&nbsp;

[sourcecode language="python"]

## lets add a string to first cell and make it bold
sheet1.write(0, 0, &amp;amp;quot;Day&amp;amp;quot;)
## this can also be written by specifying the cell number
## for the 0, 0 case the cell is A1. xlsxwriter uses 0 based indexing
sheet1.write(&amp;amp;quot;B1&amp;amp;quot;, &amp;amp;quot;Day&amp;amp;quot;)
[/sourcecode]

&nbsp;

It should ideally create a Microsoft excel file named "book.xlsx" file. Sometimes (for the reason not known) you won't see this file created. Close the workbook object explicitly to create "book.xlsx" file.

[sourcecode language="python"]

book.close()

[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>31</wp:post_id>
  <wp:post_date>2016-05-03 17:28:02</wp:post_date>
  <wp:post_date_gmt>2016-05-03 17:28:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-xlsxwriter</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[22439913962]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[4450090]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Reduce size of MP4</title>
  <link>https://datavizweb.wordpress.com/2016/05/04/reduce-size-of-mp4/</link>
  <pubDate>Wed, 04 May 2016 13:50:22 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?p=67</guid>
  <description/>
  <content:encoded><![CDATA[I had an mp4 file which was of size 132 MB. I wanted to reduce the size of the file so that I can share it over mail. I googled for the solution and came across various options like using ffmpeg or other tools. After trying with all the options what worked for me is conversion using avconv. Here is the exact command I used on a Ubuntu 14.04.

[sourcecode language="bash"]

avconv -i input.mp4 -s 1280x960 -strict experimental output.mp4

[/sourcecode]

I had to add the option "-strict experimental " as the tool showed warning when used without it. You can play with different resolution for "-s" option. With resolution of 1280x960 the size of mp4 reduced to 25 MB. Lower resolution can give smaller size, however it will affect the video quality.

I haven't explored other options. If your in a hurry then avconv can get our work done without needing to know about Complex details about video format.

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>67</wp:post_id>
  <wp:post_date>2016-05-04 13:50:22</wp:post_date>
  <wp:post_date_gmt>2016-05-04 13:50:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>reduce-size-of-mp4</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[22469806541]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[4450090]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Learning Goals</title>
  <link>https://datavizweb.wordpress.com/2016/05/14/learning-goals/</link>
  <pubDate>Sat, 14 May 2016 06:51:04 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?p=93</guid>
  <description/>
  <content:encoded><![CDATA[Following are learning resources which I would be using to augment my knowledge. I have set a one year goal for this and Hope to acquire as much knowledge as possible. As there are large information to acquire, I will go in phased manner and will discuss the progress here in this blog.

<ul>
    <li>Learning a Tool
<ul>
    <li><a href="https://www.tensorflow.org/" target="_blank">Tensorflow</a> : A tool released by google which can be used to create production quality machine learning application.</li>
</ul>
</li>
    <li>Online Courses
<ul>
    <li>Planning to take following courses
<ul>
    <li><a href="http://cs109.github.io/2015/pages/videos.html" target="_blank">Harvard Datascience</a>
<ul>
    <li>Taking this course to get familiarize with the tools used.</li>
</ul>
</li>
    <li><a href="https://www.coursera.org/course/mmds" target="_blank">Minning Massive Datasets</a>
<ul>
    <li>This course is to understand the complexity involved while processing large dataset.</li>
</ul>
</li>
    <li><a href="https://lagunita.stanford.edu/courses/HumanitiesScience/StatLearning/Winter2014/about" target="_blank">Stanford StatLearning</a>
<ul>
    <li>Eventhough I am familiar with the topics which are discussed here, would like to refresh some of the concepts.</li>
</ul>
</li>
    <li><a href="https://www.udacity.com/course/deep-learning--ud730" target="_blank">Deep Learning using Tensorflow</a>
<ul>
    <li>To learn about Tensorflow</li>
</ul>
</li>
    <li><a href="https://www.edx.org/course/data-analysis-life-sciences-4-high-harvardx-ph525-4x-0" target="_blank">Data science from life science</a>
<ul>
    <li>To learn to handle high dimensional data</li>
</ul>
</li>
    <li><a href="https://www.edx.org/xseries/data-science-engineering-spark#courses" target="_blank">Data science and Engineering with Spark</a>
<ul>
    <li>Will try to get a certificate</li>
</ul>
</li>
    <li><a href="http://people.duke.edu/~ccc14/sta-663/index.html" target="_blank">Computational Statistics in Python</a>
<ul>
    <li>Learning using Python</li>
</ul>
</li>
    <li><a href="https://www.coursera.org/course/datasci" target="_blank">Introduction to Data Science</a></li>
    <li><a href="https://www.coursera.org/course/introstats" target="_blank">Statistics Making sense of data</a></li>
    <li><a href="https://courses.edx.org/courses/BerkeleyX/CS190.1x/1T2015/info">Scalable Machine Learning</a></li>
    <li><a href="http://isites.harvard.edu/icb/icb.do?keyword=k101665">Stat101 from Harvard</a></li>
    <li><a href="https://www.complexityexplorer.org/tutorials">Tutorials from CompleityExplorer</a></li>
</ul>
</li>
</ul>
</li>
    <li>Deep Learning Resources
<ul>
    <li><a href="http://ufldl.stanford.edu/tutorial/">http://ufldl.stanford.edu/tutorial/</a></li>
    <li><a href="http://cs224d.stanford.edu/syllabus.html">Deep Learning for Natural Language Processing</a></li>
    <li><a href="http://karpathy.github.io/">Andrej Karpathy's blog</a>
<ul>
    <li><a href="http://karpathy.github.io/neuralnets/">Hackers guide to neural network</a></li>
    <li><a href="http://cs231n.github.io/">Convolution Neural Network</a></li>
    <li><a href="http://neuralnetworksanddeeplearning.com/">Neural Networks and Deep Learning</a></li>
</ul>
</li>
</ul>
</li>
    <li> Resources
<ul>
    <li>Following resources I found has many materials which can help me with learning.
<ul>
    <li><a href="https://github.com/okulbilisim/awesome-datascience" target="_blank">Awesome datascience</a></li>
    <li><a href="http://datasciencemasters.org/" target="_blank">Open source data science masters</a></li>
    <li><a href="https://www.kaggle.com/wiki/Tutorials" target="_blank">Kaggle tutorial</a></li>
    <li><a href="http://www.zipfianacademy.com/blog/post/46864003608/a-practical-intro-to-data-science" target="_blank">Zipfina Academy</a></li>
</ul>
</li>
</ul>
</li>
    <li>IPython Notebooks
<ul>
    <li>IPython notebooks is great way to apply the learning. Here are some resources
<ul>
    <li><a href="https://katrinadataing.wordpress.com/2015/12/29/big-data-with-apache-spark/" target="_blank">Big data with Apache Spark</a></li>
</ul>
</li>
    <li><a href="https://github.com/rasbt/python-machine-learning-book" target="_blank">Python Machine Learning Book</a></li>
</ul>
</li>
    <li>Refresh the Basics
<ul>
    <li>Review the Linear Algebra</li>
    <li>Review of the probability concepts
<ul>
    <li><a href="http://projects.iq.harvard.edu/stat110/youtube" target="_blank">Statistics 101</a></li>
</ul>
</li>
</ul>
</li>
    <li>This Quora post has link to many resouces
<ul>
    <li><a href="https://www.quora.com/How-can-I-become-a-data-scientist-1" target="_blank">Quora post</a></li>
</ul>
</li>
    <li>Data Visulization
<ul>
    <li>My plan also includes to learn D3. It will help to create great visualization using the data.</li>
    <li><a href="https://www.dashingd3js.com/table-of-contents" target="_blank">D3 Turorial</a></li>
    <li>Bokeh : Instead of D3 which requires the knowledge, it is better to learn Bokeh</li>
    <li>I loved the presentation created using <a href="http://lab.hakim.se/reveal-js/">reveal.js</a>. Easy to learn too.</li>
</ul>
</li>
    <li>Some useful ebooks
<ul>
    <li><a href="http://greenteapress.com/wp/" target="_blank">Think Series</a>
<ul>
    <li>It has great eBooks like "Think Stats", "Think like a computer scientist"</li>
</ul>
</li>
</ul>
</li>
    <li>Other Courses
<ul>
    <li><a href="http://ocw.mit.edu/courses/sloan-school-of-management/15-062-data-mining-spring-2003/lecture-notes/" target="_blank">Data Mining by MIT Sloan School of Management</a></li>
</ul>
</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>93</wp:post_id>
  <wp:post_date>2016-05-14 06:51:04</wp:post_date>
  <wp:post_date_gmt>2016-05-14 06:51:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>learning-goals</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="datascience"><![CDATA[DataScience]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[22795983598]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1</wp:comment_id>
    <wp:comment_author><![CDATA[codingprogrammerhacker]]></wp:comment_author>
    <wp:comment_author_email>codingprogrammerhacker@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://codingprogrammerhacker.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>107.77.215.185</wp:comment_author_IP>
    <wp:comment_date>2016-05-15 14:30:17</wp:comment_date>
    <wp:comment_date_gmt>2016-05-15 14:30:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I am planning on studying this field. Thank you for the information.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>105240542</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1463322617.905602931976318359375;s:5:"event";s:9:"check-ham";s:4:"user";s:22:"codingprogrammerhacker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1463334080</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1463327598.4415318965911865234375;s:5:"event";s:9:"check-ham";s:4:"user";s:22:"codingprogrammerhacker";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1463334080</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1463334081.342236995697021484375;s:5:"event";s:15:"status-approved";s:4:"user";s:8:"sangraha";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Python Pandas for beginners</title>
  <link>https://datavizweb.wordpress.com/?p=102</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?p=102</guid>
  <description/>
  <content:encoded><![CDATA[This post is for the people who want to learn quickly Pythons Pandas module. I will use simple example to know the use of Pandas.

We will begin with reading a simple dataset which I created. It only has two fields height and weight.

[sourcecode language="bash"]

$ cat simple.csv
Height,Weight
178,65
165,60
180,75
173,61
178,60

[/sourcecode]

Lets start by asking questions related to this data.

How to read this CSV format related data into Pandas? What are the format Pandas can automatically read ?

[sourcecode language="python"]
import pandas as pd

data = pd.read_csv(&quot;simple.csv&quot;)
[/sourcecode]

Here we read the CSV into python using panda. Panda can read the CSV without byitself without needing to use the csv module. To know the other formats supported by pandas,
type pd.read_ and press tab which will show all the formats pandas can read.

[sourcecode language="python"]
In [2]: pd.read_
pd.read_clipboard pd.read_excel pd.read_gbq pd.read_html pd.read_msgpack pd.read_sql pd.read_table
pd.read_csv pd.read_fwf pd.read_hdf pd.read_json pd.read_pickle pd.read_stata 
[/sourcecode]

As many of the data available on the web are JSON format, lets try to read the JSON format data.

[sourcecode language="json"]
{
&amp;amp;nbsp; &amp;amp;nbsp; &quot;Height&quot;:{&quot;0&quot;:178,&quot;1&quot;:165,&quot;2&quot;:180,&quot;3&quot;:173,&quot;4&quot;:178},
&amp;amp;nbsp; &amp;amp;nbsp; &quot;Weight&quot;:{&quot;0&quot;:65,&quot;1&quot;:60,&quot;2&quot;:75,&quot;3&quot;:61,&quot;4&quot;:60}
}
[/sourcecode]

Now to read the JSON, we can use "read_json" function.

[sourcecode language="python"]
import pandas as pd

data = pd.read_json(&quot;simple.json&quot;)
[/sourcecode]

I created the JSON format data using "json" function.

[sourcecode language="python"]

data = pd.read_csv(&quot;simple.csv&quot;)

## convert to the JSON format but not write to the file, write to a string and write

pandas.json.dumps(data) &amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;

[/sourcecode]

Now, we have read the data into pandas lets start understanding and manipulating the data in pandas.

<!--more-->
<h3>Manipulating the data</h3>
Lets know manipulate the data which is being read. The question we now have is how the data (CSV) which is read in pandas lookslike

[sourcecode language="python"]

data

[/sourcecode]
<table class="dataframe" border="1">
<thead>
<tr>
<th></th>
<th>Height</th>
<th>Weight</th>
</tr>
</thead>
<tbody>
<tr>
<th>0</th>
<td>178</td>
<td>65</td>
</tr>
<tr>
<th>1</th>
<td>165</td>
<td>60</td>
</tr>
<tr>
<th>2</th>
<td>180</td>
<td>75</td>
</tr>
<tr>
<th>3</th>
<td>173</td>
<td>61</td>
</tr>
<tr>
<th>4</th>
<td>178</td>
<td>60</td>
</tr>
</tbody>
</table>
5 rows × 2 columns

&nbsp;

[sourcecode language="python"]
data.columns
[/sourcecode]

Index([u'Height', u'Weight'], dtype='object')

"colums" create a Index object. The object has two fields which "Height" and "Weight". They are the features of the data. Also printing "data" will show all fields. We can see that it has 5 rows each correspond to one observation (in this case one person). For example Person 1 (1st row) has height of 178 c.m and Weight of 65 kg. Now lets start manipulating the data which we have read into pandas.

When we read the CSV into pandas, for each of the fields (features/columns) pandas create a field. In this example it creates fields "Height" and "Weight" which can be accessed as data.Height and data.Weight which is
pandas series object.

Now lets get only, Height features for all the observations and also for Weight. It can be done like below.

[sourcecode language="python"] data.Weight [/sourcecode]
<pre>0    65
1    60
2    75
3    61
4    60
Name: Weight, dtype: int64</pre>
[sourcecode language="python"] data.Height [/sourcecode]
<pre>0    178
1    165
2    180
3    173
4    178
Name: Height, dtype: int64</pre>
[sourcecode language="python"]
type(data.Height) &amp;amp;nbsp; ## each of the feature are stored as pandas series object
[/sourcecode]

pandas.core.series.Series</pre>
<pre>We can also access each element using [] operator like it is done for python list and dict.

[sourcecode language="python"]

[/sourcecode]

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>102</wp:post_id>
  <wp:post_date>2016-05-15 09:37:47</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>IPython Notebook</title>
  <link>https://datavizweb.wordpress.com/?p=182</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?p=182</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>182</wp:post_id>
  <wp:post_date>2016-05-15 17:03:56</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>This is a test page</title>
  <link>https://datavizweb.wordpress.com/this-is-a-test-page/</link>
  <pubDate>Sun, 15 May 2016 17:09:20 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?page_id=189</guid>
  <description/>
  <content:encoded><![CDATA[<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [3]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="kn">import</span> <span class="nn">pandas</span> <span class="kn">as</span> <span class="nn">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"simple.csv"</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">Here</span> <span class="n">we</span> <span class="n">read</span> <span class="n">the</span> <span class="n">CSV</span> <span class="n">into</span> <span class="n">python</span> <span class="n">using</span> <span class="n">panda</span><span class="o">.</span> <span class="n">Panda</span> <span class="n">can</span> <span class="n">read</span> <span class="n">the</span> <span class="n">CSV</span> <span class="n">without</span> <span class="n">byitself</span> <span class="n">without</span> <span class="n">needing</span> <span class="n">to</span> <span class="n">use</span> <span class="n">the</span> <span class="n">csv</span> <span class="n">module</span><span class="o">.</span> 
<span class="n">You</span> <span class="n">can</span> <span class="n">also</span> <span class="n">write</span> <span class="n">data</span> <span class="n">to</span> <span class="n">other</span> <span class="n">format</span> <span class="n">like</span> <span class="n">JSON</span><span class="o">.</span> 
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [7]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">fdout</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">"simple.data.json"</span><span class="p">,</span> <span class="s2">"w"</span><span class="p">)</span>
<span class="n">fdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">"</span><span class="si">%s</span><span class="se">\n</span><span class="s2">"</span> <span class="o">%</span> <span class="n">pd</span><span class="o">.</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>
<span class="n">fdout</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [8]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="k">print</span> <span class="nb">open</span><span class="p">(</span><span class="s2">"simple.data.json"</span><span class="p">)</span><span class="o">.</span><span class="n">readlines</span><span class="p">()</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt"></div>
<div class="output_subarea output_stream output_stdout output_text">
<pre>['{"Height":{"0":178,"1":165,"2":180,"3":173,"4":178},"Weight":{"0":65,"1":60,"2":75,"3":61,"4":60}}\n']

</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [9]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">Lets</span> <span class="n">know</span> <span class="n">manipulate</span> <span class="n">the</span> <span class="n">data</span> <span class="n">which</span> <span class="ow">is</span> <span class="n">being</span> <span class="n">read</span><span class="o">.</span> 
<span class="n">The</span> <span class="n">question</span> <span class="n">we</span> <span class="n">now</span> <span class="n">have</span> <span class="ow">is</span> <span class="n">how</span> <span class="n">the</span> <span class="n">data</span> <span class="p">(</span><span class="n">CSV</span><span class="p">)</span> <span class="n">which</span> <span class="ow">is</span> <span class="n">read</span> <span class="ow">in</span> <span class="n">pandas</span> <span class="n">lookslike</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [67]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[67]:</div>
<div class="output_html rendered_html output_subarea output_pyout">
<div style="max-height:1000px;max-width:1500px;overflow:auto;">
<table class="dataframe" border="1">
<thead>
<tr style="text-align:right;">
<th></th>
<th>Height</th>
<th>Weight</th>
</tr>
</thead>
<tbody>
<tr>
<th>0</th>
<td>178</td>
<td>65</td>
</tr>
<tr>
<th>1</th>
<td>165</td>
<td>60</td>
</tr>
<tr>
<th>2</th>
<td>180</td>
<td>75</td>
</tr>
<tr>
<th>3</th>
<td>173</td>
<td>61</td>
</tr>
<tr>
<th>4</th>
<td>178</td>
<td>60</td>
</tr>
</tbody>
</table>
5 rows × 2 columns

</div>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [68]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">columns</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[68]:</div>
<div class="output_text output_subarea output_pyout">
<pre>Index([u'Height', u'Weight'], dtype='object')
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="s2">"colums"</span> <span class="n">create</span> <span class="n">a</span> <span class="n">Index</span> <span class="nb">object</span><span class="o">.</span> <span class="n">The</span> <span class="nb">object</span> <span class="n">has</span> <span class="n">two</span> <span class="n">fields</span> <span class="n">which</span> <span class="s2">"Height"</span> <span class="ow">and</span> <span class="s2">"Weight"</span><span class="o">.</span> 
<span class="n">They</span> <span class="n">are</span> <span class="n">the</span> <span class="n">features</span> <span class="n">of</span> <span class="n">the</span> <span class="n">data</span><span class="o">.</span> <span class="n">Also</span> <span class="n">printing</span> <span class="s2">"data"</span> <span class="n">will</span> <span class="n">show</span> <span class="nb">all</span> <span class="n">fields</span><span class="o">.</span> 
<span class="n">We</span> <span class="n">can</span> <span class="n">see</span> <span class="n">that</span> <span class="n">it</span> <span class="n">has</span> <span class="mi">5</span> <span class="n">rows</span> <span class="n">each</span> <span class="n">correspond</span> <span class="n">to</span> <span class="n">one</span> <span class="n">observation</span> <span class="p">(</span><span class="ow">in</span> <span class="n">this</span> <span class="n">case</span> <span class="n">one</span> <span class="n">person</span><span class="p">)</span><span class="o">.</span>
<span class="n">For</span> <span class="n">example</span> <span class="n">Person</span> <span class="mi">1</span> <span class="p">(</span><span class="mi">1</span><span class="n">st</span> <span class="n">row</span><span class="p">)</span> <span class="n">has</span> <span class="n">height</span> <span class="n">of</span> <span class="mi">178</span> <span class="n">c</span><span class="o">.</span><span class="n">m</span> <span class="ow">and</span> <span class="n">Weight</span> <span class="n">of</span> <span class="mi">65</span> <span class="n">kg</span><span class="o">.</span> <span class="n">Now</span> <span class="n">lets</span> <span class="n">start</span> <span class="n">manipulating</span> <span class="n">the</span> <span class="n">data</span> <span class="n">which</span>
<span class="n">we</span> <span class="n">have</span> <span class="n">read</span> <span class="n">into</span> <span class="n">pandas</span><span class="o">.</span>

<span class="n">When</span> <span class="n">we</span> <span class="n">read</span> <span class="n">the</span> <span class="n">CSV</span> <span class="n">into</span> <span class="n">pandas</span><span class="p">,</span> <span class="k">for</span> <span class="n">each</span> <span class="n">of</span> <span class="n">the</span> <span class="n">fields</span> <span class="p">(</span><span class="n">features</span><span class="o">/</span><span class="n">colums</span><span class="p">)</span> <span class="n">pandas</span> <span class="n">create</span> <span class="n">a</span> <span class="n">field</span><span class="o">.</span>
<span class="n">In</span> <span class="n">this</span> <span class="n">example</span> <span class="n">it</span> <span class="n">creates</span> <span class="n">fields</span> <span class="s2">"Height"</span> <span class="ow">and</span> <span class="s2">"Weight"</span> <span class="n">which</span> <span class="n">can</span> <span class="n">be</span> <span class="n">accessed</span> <span class="k">as</span> <span class="n">data</span><span class="o">.</span><span class="n">Height</span> <span class="ow">and</span> <span class="n">data</span><span class="o">.</span><span class="n">Weight</span> <span class="n">which</span> <span class="ow">is</span>
<span class="n">pandas</span> <span class="n">series</span> <span class="nb">object</span><span class="o">.</span>

<span class="n">Now</span> <span class="n">lets</span> <span class="n">get</span> <span class="n">only</span><span class="p">,</span> <span class="n">Height</span> <span class="n">features</span> <span class="k">for</span> <span class="nb">all</span> <span class="n">the</span> <span class="n">observations</span> <span class="ow">and</span> <span class="n">also</span> <span class="k">for</span> <span class="n">Weight</span><span class="o">.</span> <span class="n">It</span> <span class="n">can</span> <span class="n">be</span> <span class="n">done</span> <span class="n">like</span> <span class="n">below</span><span class="o">.</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [13]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Weight</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[13]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    65
1    60
2    75
3    61
4    60
Name: Weight, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [12]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[12]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    178
1    165
2    180
3    173
4    178
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [46]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="nb">type</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">)</span>   <span class="c1">## each of the feature are stored as pandas series object</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[46]:</div>
<div class="output_text output_subarea output_pyout">
<pre>pandas.core.series.Series
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">We</span> <span class="n">can</span> <span class="n">also</span> <span class="n">access</span> <span class="n">each</span> <span class="n">element</span> <span class="n">using</span> <span class="p">[]</span> <span class="n">operator</span> <span class="n">like</span> <span class="n">it</span> <span class="ow">is</span> <span class="n">done</span> <span class="k">for</span> <span class="n">python</span> <span class="nb">list</span> <span class="ow">and</span> <span class="nb">dict</span><span class="o">.</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [35]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Weight</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[35]:</div>
<div class="output_text output_subarea output_pyout">
<pre>65
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [40]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">[</span><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">size</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[40]:</div>
<div class="output_text output_subarea output_pyout">
<pre>178
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [41]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>   <span class="c1">## reverse indexing doesn't work !!!</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt"></div>
<div class="output_subarea output_text output_pyerr">
<pre><span class="ansired">---------------------------------------------------------------------------</span>
<span class="ansired">KeyError</span>                                  Traceback (most recent call last)
<span class="ansigreen">&lt;ipython-input-41-8922376fd1ed&gt;</span> in <span class="ansicyan">&lt;module&gt;</span><span class="ansiblue">()</span>
<span class="ansigreen">----&gt; 1</span> data<span class="ansiblue">.</span>Height<span class="ansiblue">[</span><span class="ansiblue">-</span><span class="ansicyan">1</span><span class="ansiblue">]</span>   <span class="ansired">## reverse indexing doesn't work !!!</span>

<span class="ansigreen">/usr/lib/python2.7/dist-packages/pandas/core/series.pyc</span> in <span class="ansicyan">__getitem__</span><span class="ansiblue">(self, key)</span>
<span class="ansigreen">    489</span>     <span class="ansigreen">def</span> __getitem__<span class="ansiblue">(</span>self<span class="ansiblue">,</span> key<span class="ansiblue">)</span><span class="ansiblue">:</span>
<span class="ansigreen">    490</span>         <span class="ansigreen">try</span><span class="ansiblue">:</span>
<span class="ansigreen">--&gt; 491</span>             result <span class="ansiblue">=</span> self<span class="ansiblue">.</span>index<span class="ansiblue">.</span>get_value<span class="ansiblue">(</span>self<span class="ansiblue">,</span> key<span class="ansiblue">)</span>
<span class="ansigreen">    492</span>             <span class="ansigreen">if</span> isinstance<span class="ansiblue">(</span>result<span class="ansiblue">,</span> np<span class="ansiblue">.</span>ndarray<span class="ansiblue">)</span><span class="ansiblue">:</span>
<span class="ansigreen">    493</span>                 <span class="ansigreen">return</span> self<span class="ansiblue">.</span>_constructor<span class="ansiblue">(</span>result<span class="ansiblue">,</span>index<span class="ansiblue">=</span><span class="ansiblue">[</span>key<span class="ansiblue">]</span><span class="ansiblue">*</span>len<span class="ansiblue">(</span>result<span class="ansiblue">)</span><span class="ansiblue">)</span><span class="ansiblue">.</span>__finalize__<span class="ansiblue">(</span>self<span class="ansiblue">)</span>

<span class="ansigreen">/usr/lib/python2.7/dist-packages/pandas/core/index.pyc</span> in <span class="ansicyan">get_value</span><span class="ansiblue">(self, series, key)</span>
<span class="ansigreen">   1030</span> 
<span class="ansigreen">   1031</span>         <span class="ansigreen">try</span><span class="ansiblue">:</span>
<span class="ansigreen">-&gt; 1032</span>             <span class="ansigreen">return</span> self<span class="ansiblue">.</span>_engine<span class="ansiblue">.</span>get_value<span class="ansiblue">(</span>s<span class="ansiblue">,</span> k<span class="ansiblue">)</span>
<span class="ansigreen">   1033</span>         <span class="ansigreen">except</span> KeyError <span class="ansigreen">as</span> e1<span class="ansiblue">:</span>
<span class="ansigreen">   1034</span>             <span class="ansigreen">if</span> len<span class="ansiblue">(</span>self<span class="ansiblue">)</span> <span class="ansiblue">&gt;</span> <span class="ansicyan">0</span> <span class="ansigreen">and</span> self<span class="ansiblue">.</span>inferred_type <span class="ansiblue">==</span> <span class="ansiblue">'integer'</span><span class="ansiblue">:</span>

<span class="ansigreen">/usr/lib/python2.7/dist-packages/pandas/index.so</span> in <span class="ansicyan">pandas.index.IndexEngine.get_value (pandas/index.c:2957)</span><span class="ansiblue">()</span>

<span class="ansigreen">/usr/lib/python2.7/dist-packages/pandas/index.so</span> in <span class="ansicyan">pandas.index.IndexEngine.get_value (pandas/index.c:2772)</span><span class="ansiblue">()</span>

<span class="ansigreen">/usr/lib/python2.7/dist-packages/pandas/index.so</span> in <span class="ansicyan">pandas.index.IndexEngine.get_loc (pandas/index.c:3498)</span><span class="ansiblue">()</span>

<span class="ansigreen">/usr/lib/python2.7/dist-packages/pandas/hashtable.so</span> in <span class="ansicyan">pandas.hashtable.Int64HashTable.get_item (pandas/hashtable.c:6930)</span><span class="ansiblue">()</span>

<span class="ansigreen">/usr/lib/python2.7/dist-packages/pandas/hashtable.so</span> in <span class="ansicyan">pandas.hashtable.Int64HashTable.get_item (pandas/hashtable.c:6871)</span><span class="ansiblue">()</span>

<span class="ansired">KeyError</span>: -1</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">Now</span><span class="p">,</span> <span class="n">lets</span> <span class="k">try</span> <span class="n">to</span> <span class="n">get</span> <span class="n">some</span> <span class="n">information</span> <span class="n">related</span> <span class="n">to</span> <span class="n">data</span><span class="o">.</span> <span class="n">Panda</span> <span class="n">provides</span> <span class="n">lots</span> <span class="n">of</span> <span class="n">methods</span> <span class="n">which</span> <span class="n">can</span> <span class="n">be</span> <span class="n">used</span> <span class="n">to</span> 
<span class="n">get</span> <span class="n">information</span> <span class="n">related</span> <span class="n">to</span> <span class="n">data</span><span class="o">.</span> <span class="n">Here</span> <span class="n">we</span> <span class="n">are</span> <span class="n">trying</span> <span class="n">to</span> <span class="n">get</span> <span class="n">information</span> <span class="n">related</span> <span class="n">to</span> <span class="n">one</span> <span class="n">particular</span> <span class="n">feature</span> <span class="n">Height</span><span class="o">.</span> 
<span class="n">Same</span> <span class="n">can</span> <span class="n">be</span> <span class="n">used</span> <span class="k">for</span> <span class="n">feature</span> <span class="n">Weight</span> <span class="p">(</span><span class="n">this</span> <span class="n">example</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [16]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">size</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[16]:</div>
<div class="output_text output_subarea output_pyout">
<pre>5
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [15]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">count</span><span class="p">()</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[15]:</div>
<div class="output_text output_subarea output_pyout">
<pre>5
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [17]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">max</span><span class="p">()</span>  <span class="c1">## max value of the feature Height (column Height)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[17]:</div>
<div class="output_text output_subarea output_pyout">
<pre>180
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [19]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">min</span><span class="p">()</span>  <span class="c1">## min value of the feature Height (min value of column Height)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[19]:</div>
<div class="output_text output_subarea output_pyout">
<pre>165
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">We</span> <span class="n">can</span> <span class="n">also</span> <span class="n">get</span> <span class="n">the</span> <span class="n">index</span> <span class="n">of</span> <span class="n">the</span> <span class="n">maximum</span> <span class="n">element</span> <span class="k">as</span> <span class="n">below</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [33]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">idxmax</span><span class="p">()</span>  <span class="c1">## returns the index of the maximum value</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[33]:</div>
<div class="output_text output_subarea output_pyout">
<pre>2
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [34]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">[</span><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">idxmax</span><span class="p">()]</span>  <span class="c1">## note the [] which is used to get the maximum element using the index</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[34]:</div>
<div class="output_text output_subarea output_pyout">
<pre>180
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">What</span> <span class="k">if</span> <span class="n">we</span> <span class="n">want</span> <span class="n">to</span> <span class="n">modify</span> <span class="n">each</span> <span class="n">of</span> <span class="n">the</span> <span class="n">elements</span> <span class="n">of</span> <span class="n">the</span> <span class="n">feature</span> <span class="n">Height</span><span class="o">.</span> <span class="n">Say</span> <span class="n">we</span> <span class="n">want</span> <span class="n">to</span> <span class="n">add</span> <span class="n">a</span> <span class="n">constant</span> <span class="mi">100</span> <span class="ow">or</span> <span class="nb">any</span> <span class="n">other</span>
<span class="n">arthimatic</span> <span class="n">operation</span><span class="o">.</span> <span class="n">Panda</span> <span class="n">provides</span> <span class="n">function</span> <span class="k">for</span> <span class="n">that</span> <span class="n">too</span><span class="o">.</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [20]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[20]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    178
1    165
2    180
3    173
4    178
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [21]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>  <span class="c1">## add a constat 100 to each observation of feature Height</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[21]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    278
1    265
2    280
3    273
4    278
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [22]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">subtract</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[22]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    78
1    65
2    80
3    73
4    78
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [23]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">multiply</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[23]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    1780
1    1650
2    1800
3    1730
4    1780
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [24]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">divide</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[24]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    17.8
1    16.5
2    18.0
3    17.3
4    17.8
Name: Height, dtype: float64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">All</span> <span class="n">these</span> <span class="n">airthematic</span> <span class="n">operation</span> <span class="n">can</span> <span class="n">also</span> <span class="n">be</span> <span class="n">done</span> <span class="n">by</span> <span class="n">using</span> <span class="n">the</span> <span class="n">operator</span> <span class="n">directly</span> <span class="k">as</span> <span class="n">below</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [66]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span> <span class="o">/</span> <span class="mi">10</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[66]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    17.8
1    16.5
2    18.0
3    17.3
4    17.8
Name: Height, dtype: float64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">Good</span><span class="p">,</span> <span class="n">what</span> <span class="k">else</span> <span class="n">we</span> <span class="n">can</span> <span class="n">do</span><span class="o">.</span> <span class="n">Lets</span> <span class="k">try</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">statistics</span> <span class="n">related</span> <span class="n">to</span> <span class="n">feature</span> <span class="n">Height</span><span class="o">.</span> <span class="n">Like</span><span class="p">,</span> <span class="n">mean</span> <span class="n">height</span><span class="p">,</span> <span class="n">variance</span><span class="p">,</span> 
<span class="n">standard</span> <span class="n">devication</span> <span class="n">etc</span><span class="o">.</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [25]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[25]:</div>
<div class="output_text output_subarea output_pyout">
<pre>174.80000000000001
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [26]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">std</span><span class="p">()</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[26]:</div>
<div class="output_text output_subarea output_pyout">
<pre>6.0580524923441432
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [27]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">var</span><span class="p">()</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[27]:</div>
<div class="output_text output_subarea output_pyout">
<pre>36.69999999999709
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [42]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[42]:</div>
<div class="output_text output_subarea output_pyout">
<pre>36.700000000000003
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [44]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">corr</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">)</span>  <span class="c1">## correlation with itself.</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[44]:</div>
<div class="output_text output_subarea output_pyout">
<pre>1.0
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [45]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">kurtosis</span><span class="p">()</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[45]:</div>
<div class="output_text output_subarea output_pyout">
<pre>1.4431022583944302
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">What</span> <span class="n">about</span> <span class="n">the</span> <span class="n">comparison</span><span class="o">.</span> <span class="n">i</span><span class="o">.</span><span class="n">e</span> <span class="n">If</span> <span class="n">we</span> <span class="n">want</span> <span class="n">to</span> <span class="n">compare</span> <span class="n">this</span> <span class="n">feature</span> <span class="p">(</span><span class="n">Height</span><span class="p">)</span> <span class="k">with</span> <span class="n">another</span> <span class="n">feature</span><span class="o">.</span>
<span class="n">There</span> <span class="n">are</span> <span class="n">equality</span> <span class="n">operators</span> <span class="n">that</span> <span class="n">can</span> <span class="n">be</span> <span class="n">used</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [28]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">equals</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">)</span>  <span class="c1">## data.Height is equal to data.Height</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[28]:</div>
<div class="output_text output_subarea output_pyout">
<pre>True
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [29]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">equals</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">Weight</span><span class="p">)</span>  <span class="c1">## data.Height is not equal to data.Weight</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[29]:</div>
<div class="output_text output_subarea output_pyout">
<pre>False
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">Lets</span> <span class="k">try</span> <span class="n">the</span> <span class="n">operators</span> <span class="n">like</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">gt</span><span class="p">),</span> <span class="o">&gt;=</span> <span class="p">(</span><span class="n">ge</span><span class="p">),</span> <span class="o">&lt;</span> <span class="p">(</span><span class="n">lt</span><span class="p">),</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="n">lt</span><span class="p">)</span> <span class="n">etc</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [30]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">gt</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">Weight</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[30]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    True
1    True
2    True
3    True
4    True
dtype: bool
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [31]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">lt</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">Weight</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[31]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    False
1    False
2    False
3    False
4    False
dtype: bool
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [32]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">ge</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">Weight</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[32]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    True
1    True
2    True
3    True
4    True
dtype: bool
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">You</span> <span class="n">need</span> <span class="ow">not</span> <span class="n">use</span> <span class="n">these</span> <span class="n">functions</span><span class="p">,</span> <span class="n">instead</span> <span class="n">you</span> <span class="n">can</span> <span class="n">use</span> <span class="n">the</span> <span class="n">operators</span> <span class="n">directly</span> <span class="k">as</span> <span class="n">below</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [61]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span> <span class="o">&gt;</span> <span class="mi">170</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[61]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0     True
1    False
2     True
3     True
4     True
Name: Height, dtype: bool
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">You</span> <span class="n">can</span> <span class="n">explore</span> <span class="n">the</span> <span class="n">rest</span><span class="o">.</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">As</span> <span class="n">we</span> <span class="n">already</span> <span class="n">know</span><span class="p">,</span> <span class="n">each</span> <span class="n">of</span> <span class="n">the</span> <span class="n">features</span> <span class="n">are</span> <span class="n">stored</span> <span class="k">as</span> <span class="n">pandas</span> <span class="n">series</span> <span class="nb">object</span><span class="o">.</span> <span class="n">They</span> <span class="n">are</span> <span class="n">stored</span> <span class="n">simialr</span> <span class="n">to</span> <span class="n">python</span> <span class="n">dictionary</span><span class="o">.</span>
<span class="n">So</span> <span class="n">it</span> <span class="n">has</span> <span class="n">keys</span><span class="p">()</span> <span class="n">function</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">index</span> <span class="ow">and</span> <span class="n">values</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">values</span><span class="o">.</span> <span class="n">Also</span> <span class="n">it</span> <span class="ow">is</span> <span class="n">iterable</span><span class="o">.</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [50]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">keys</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[50]:</div>
<div class="output_text output_subarea output_pyout">
<pre>&lt;bound method Series.keys of 0    178
1    165
2    180
3    173
4    178
Name: Height, dtype: int64&gt;
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [49]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">values</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[49]:</div>
<div class="output_text output_subarea output_pyout">
<pre>array([178, 165, 180, 173, 178])
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">Here</span> <span class="n">are</span> <span class="n">some</span> <span class="n">ways</span> <span class="n">of</span> <span class="n">iterating</span> <span class="n">through</span> <span class="n">the</span> <span class="n">features</span><span class="o">.</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [51]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">:</span>
    <span class="k">print</span> <span class="n">i</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt"></div>
<div class="output_subarea output_stream output_stdout output_text">
<pre>178
165
180
173
178

</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [52]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
    <span class="k">print</span> <span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt"></div>
<div class="output_subarea output_stream output_stdout output_text">
<pre>178
165
180
173
178

</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">Other</span> <span class="n">ways</span> <span class="n">to</span> <span class="n">access</span> <span class="n">the</span> <span class="n">features</span> <span class="n">are</span> <span class="n">taking</span> <span class="n">first</span> <span class="n">few</span> <span class="n">elements</span> <span class="p">(</span><span class="n">head</span><span class="p">),</span> <span class="n">taking</span> <span class="n">last</span> <span class="n">few</span> <span class="n">elements</span> <span class="p">(</span><span class="n">tail</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [54]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[54]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    178
1    165
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [55]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">tail</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[55]:</div>
<div class="output_text output_subarea output_pyout">
<pre>3    173
4    178
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">If</span> <span class="n">you</span> <span class="n">want</span> <span class="n">to</span> <span class="n">take</span> <span class="n">observatons</span> <span class="p">(</span><span class="n">rows</span><span class="p">)</span> <span class="n">of</span> <span class="n">your</span> <span class="n">choice</span><span class="p">,</span> <span class="n">you</span> <span class="n">can</span> <span class="n">use</span> <span class="n">take</span><span class="p">()</span> <span class="n">fucntion</span><span class="p">,</span> 
<span class="ow">or</span> <span class="n">you</span> <span class="n">can</span> <span class="n">even</span> <span class="n">use</span> <span class="n">pythons</span> <span class="nb">slice</span> <span class="n">operations</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [56]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">take</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">])</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[56]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    178
2    180
4    178
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [57]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[57]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    178
1    165
2    180
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [59]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">4</span><span class="p">:</span><span class="mi">2</span><span class="p">]</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[59]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    178
2    180
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">You</span> <span class="n">can</span> <span class="n">also</span> <span class="n">revese</span> <span class="n">the</span> <span class="n">observations</span> <span class="n">using</span> <span class="n">slicing</span> <span class="n">operation</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [60]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[60]:</div>
<div class="output_text output_subarea output_pyout">
<pre>4    178
3    173
2    180
1    165
0    178
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">Earlier</span><span class="p">,</span> <span class="n">we</span> <span class="n">used</span> <span class="n">boolean</span> <span class="n">operator</span> <span class="n">on</span> <span class="n">the</span> <span class="n">data</span><span class="o">.</span><span class="n">Height</span> <span class="n">which</span> <span class="n">returned</span> <span class="n">either</span> <span class="bp">True</span> <span class="ow">or</span> <span class="bp">False</span> <span class="n">depending</span> <span class="n">on</span> <span class="n">whether</span> <span class="n">they</span> 
<span class="n">staisfied</span> <span class="n">the</span> <span class="n">condition</span> <span class="ow">or</span> <span class="ow">not</span><span class="o">.</span> <span class="n">We</span> <span class="n">can</span> <span class="n">also</span> <span class="n">use</span> <span class="n">them</span> <span class="n">to</span> <span class="n">extract</span> <span class="n">the</span> <span class="n">observations</span> <span class="n">like</span> <span class="n">below</span><span class="o">.</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [63]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="p">[</span><span class="n">data</span><span class="o">.</span><span class="n">Height</span> <span class="o">&gt;</span> <span class="mi">170</span><span class="p">]</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[63]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    178
2    180
3    173
4    178
Name: Height, dtype: int64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">We</span> <span class="n">notice</span> <span class="n">however</span> <span class="n">that</span> <span class="n">the</span> <span class="n">out</span> <span class="n">size</span> <span class="ow">is</span> <span class="n">less</span> <span class="n">than</span> <span class="n">the</span> <span class="n">size</span> <span class="n">of</span> <span class="n">the</span> <span class="n">inital</span> <span class="n">observation</span> <span class="n">size</span><span class="o">.</span> 
<span class="p">(</span><span class="n">observation</span> <span class="mi">1</span> <span class="n">doesn</span><span class="s1">'t satisfy the condtion). We can use where() function to get the observation series which statisfies the</span>
 <span class="n">condtion</span><span class="p">,</span> <span class="n">but</span> <span class="n">also</span> <span class="k">return</span> <span class="n">the</span> <span class="n">new</span> <span class="n">observation</span> <span class="n">series</span> <span class="n">which</span> <span class="n">has</span> <span class="n">same</span> <span class="n">size</span> <span class="k">as</span> <span class="n">that</span> <span class="n">of</span> <span class="n">original</span> <span class="n">series</span><span class="o">.</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [64]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">Height</span> <span class="o">&gt;</span> <span class="mi">170</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[64]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    178
1    NaN
2    180
3    173
4    178
Name: Height, dtype: float64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="n">The</span> <span class="n">line</span> <span class="n">which</span> <span class="n">has</span> <span class="n">NaN</span> <span class="ow">is</span> <span class="n">the</span> <span class="n">one</span> <span class="n">which</span> <span class="n">doesn</span><span class="s1">'t satisfy the condition.</span>
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In [65]:</div>
<div class="inner_cell">
<div class="input_area">
<div class="highlight">
<pre><span class="c1">## mask() is inverse operation of the where() (sort of negation)</span>
<span class="n">data</span><span class="o">.</span><span class="n">Height</span><span class="o">.</span><span class="n">mask</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">Height</span> <span class="o">&gt;</span> <span class="mi">170</span><span class="p">)</span>
</pre>
</div>
</div>
</div>
</div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="prompt output_prompt">Out[65]:</div>
<div class="output_text output_subarea output_pyout">
<pre>0    NaN
1    165
2    NaN
3    NaN
4    NaN
Name: Height, dtype: float64
</pre>
</div>
</div>
</div>
</div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<div class="prompt input_prompt">In []:</div>
<div class="inner_cell"></div>
</div>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>189</wp:post_id>
  <wp:post_date>2016-05-15 17:09:20</wp:post_date>
  <wp:post_date_gmt>2016-05-15 17:09:20</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>this-is-a-test-page</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://datavizweb.wordpress.com/2016/05/20/__trashed-2/</link>
  <pubDate>Fri, 20 May 2016 17:04:47 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?p=197</guid>
  <description/>
  <content:encoded><![CDATA[#Header1

##Header2]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>197</wp:post_id>
  <wp:post_date>2016-05-20 17:04:47</wp:post_date>
  <wp:post_date_gmt>2016-05-20 17:04:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>__trashed-2</wp:post_name>
  <wp:status>trash</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[4450090]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
    <wp:meta_value><![CDATA[draft]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_trash_meta_time</wp:meta_key>
    <wp:meta_value><![CDATA[1463763981]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_desired_post_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Markdown</title>
  <link>https://datavizweb.wordpress.com/?p=199</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?p=199</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Hello</strong>

<em>Hello</em>

<blockquote>this is a text</blockquote>

<ul>
    <li>bullet 1</li>
    <li>bullet 2</li>
    <li>kkk</li>
</ul>

[code lang=python]
import sys
[/code]

<blockquote>
  test
</blockquote>

[code lang=python]
import sys
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>199</wp:post_id>
  <wp:post_date>2016-05-20 17:24:29</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[4450090]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>IPython Notebook to Reveal.js slides</title>
  <link>https://datavizweb.wordpress.com/2016/05/22/ipython-notebook-to-reveal-js-slides/</link>
  <pubDate>Sun, 22 May 2016 17:21:45 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?p=208</guid>
  <description/>
  <content:encoded><![CDATA[I was wondering if it is possible convert IPython notebook directly to Slides. I searched for it and came across this particular article. Many people don't know about it. But it is possible to convert IPython notebook directly to Slides. Details are here in this <a href="http://www.damian.oquanta.info/posts/make-your-slides-with-ipython.html">blog</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>208</wp:post_id>
  <wp:post_date>2016-05-22 17:21:45</wp:post_date>
  <wp:post_date_gmt>2016-05-22 17:21:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ipython-notebook-to-reveal-js-slides</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[23069741324]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Regression</title>
  <link>https://datavizweb.wordpress.com/?page_id=212</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>sangraha</dc:creator>
  <guid isPermaLink="false">https://datavizweb.wordpress.com/?page_id=212</guid>
  <description/>
  <content:encoded><![CDATA[<ul>
    <li>What is regression ?</li>
    <li>Predicting the value of House ?</li>
    <li>f_w(x) = W_0 + W_1x</li>
    <li>Cost function is "Sum of Residues"</li>
    <li>Get the Linear equation such that we get minimum "Sum of Residues"
<ul>
    <li>First fit a line to data</li>
    <li>For new data get the value we get from equation
<ul>
    <li>Output you get is the prediction</li>
</ul>
</li>
    <li>For a data we can fit
<ul>
    <li>Linear equation</li>
    <li>Quadratic equation
<ul>
    <li>W_0 + W_1X + W_2X^2</li>
</ul>
</li>
    <li>Polynomial Equation
<ul>
    <li>Can over fit the data. We don't want to learn too much information about the data.</li>
    <li>Doesn't generalize well</li>
    <li>Model will become more flexible</li>
    <li>More degree of freedom</li>
</ul>
</li>
</ul>
</li>
    <li>How do we know about right model complexity ?
<ul>
    <li>How do we know we need to chose Linear, Quadratic, or Polynomial Equation</li>
</ul>
</li>
    <li>Use the data set and create train and test set
<ul>
    <li>Use the train set and train the model
<ul>
    <li>i.e Estimate the model parameters (either linear or non-linear equation)</li>
    <li>Compute the train set error</li>
</ul>
</li>
    <li>Use model created using train data and compute the test error</li>
    <li>Check how the train and test error vary</li>
</ul>
</li>
    <li></li>
</ul>
</li>
</ul>

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>212</wp:post_id>
  <wp:post_date>2016-05-24 17:45:31</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
